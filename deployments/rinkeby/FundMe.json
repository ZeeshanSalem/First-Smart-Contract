{
  "address": "0x5fbA23F8BB0E96aeBCe5b12c69EDB16042a25bE3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8809f0cf27d686196cf0e88c8df0910ad4fd691087eeff70d6fd67f64cea2fcc",
  "receipt": {
    "to": null,
    "from": "0x9fabd73b5BE1355C500a99702712319cB33D958A",
    "contractAddress": "0x5fbA23F8BB0E96aeBCe5b12c69EDB16042a25bE3",
    "transactionIndex": 12,
    "gasUsed": "1065830",
    "logsBloom": "0x
    "blockHash": "0x2bf380c2b0cf1c7863e1ff36c1e7e21a14bb9fb8d0d0417749a447f85b1cf97c",
    "transactionHash": "0x8809f0cf27d686196cf0e88c8df0910ad4fd691087eeff70d6fd67f64cea2fcc",
    "logs": [],
    "blockNumber": 11314963,
    "cumulativeGasUsed": "3170089",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xaEA2808407B7319A31A383B6F8B60f04BCa23cE2"
  ],
  "numDeployments": 2,
  "solcInputHash": "6b6cbe8dc51759098df74e5078d9748a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Zeeshan Saleem\",\"details\":\"this implement price feed is a library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crow funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for crow funding\\n * @author Zeeshan Saleem\\n * @notice this contract is to demo a simple funding contract\\n * @dev this implement price feed is a library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithDraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 1;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    // View/pure\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x33c0e85260801284b42f846317b64dcab0a2c1b89290d6b514e3906e313539be\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x222f8b912c930f71a2d5b21cc91409442039a2fd5e7d3c53a901751ada1cd559\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012ec380380620012ec83398181016040528101906200003791906200012a565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b600060208284031215620001435762000142620000c0565b5b6000620001538482850162000113565b91505092915050565b611180806200016c6000396000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e8146100fc5780639e87a5cd14610127578063b60d428814610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd578063599b4619146100c75780636b69a592146100d1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ab8565b610199565b6040516100b49190610afe565b60405180910390f35b6100c56101e1565b005b6100cf610423565b005b3480156100dd57600080fd5b506100e66106ef565b6040516100f39190610afe565b60405180910390f35b34801561010857600080fd5b506101116106fc565b60405161011e9190610b28565b60405180910390f35b34801561013357600080fd5b5061013c610726565b6040516101499190610ba2565b60405180910390f35b61015a610750565b005b34801561016857600080fd5b50610183600480360381019061017e9190610be9565b61088a565b6040516101909190610b28565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610268576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103135760006001828154811061028e5761028d610c16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030b90610c74565b91505061026b565b50600067ffffffffffffffff81111561032f5761032e610cbd565b5b60405190808252806020026020018201604052801561035d5781602001602082028036833780820191505090505b50600190805190602001906103739291906109ae565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039a90610d1d565b60006040518083038185875af1925050503d80600081146103d7576040519150601f19603f3d011682016040523d82523d6000602084013e6103dc565b606091505b5050905080610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041790610d8f565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561052e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104e4575b505050505090506000600190505b81518110156105bc57600082828151811061055a57610559610c16565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105b490610c74565b91505061053c565b50600067ffffffffffffffff8111156105d8576105d7610cbd565b5b6040519080825280602002602001820160405280156106065781602001602082028036833780820191505090505b506001908051906020019061061c9291906109ae565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161066590610d1d565b60006040518083038185875af1925050503d80600081146106a2576040519150601f19603f3d011682016040523d82523d6000602084013e6106a7565b606091505b50509050806106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290610d8f565b60405180910390fd5b5050565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061078f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d290919063ffffffff16565b10156107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610dfb565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081e9190610e1b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600182815481106108a05761089f610c16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108de8361090e565b90506000670de0b6b3a764000085836108f79190610e71565b6109019190610efa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190610fb8565b5050509150506402540be400816109a69190611033565b915050919050565b828054828255906000526020600020908101928215610a27579160200282015b82811115610a265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ce565b5b509050610a349190610a38565b5090565b5b80821115610a51576000816000905550600101610a39565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8582610a5a565b9050919050565b610a9581610a7a565b8114610aa057600080fd5b50565b600081359050610ab281610a8c565b92915050565b600060208284031215610ace57610acd610a55565b5b6000610adc84828501610aa3565b91505092915050565b6000819050919050565b610af881610ae5565b82525050565b6000602082019050610b136000830184610aef565b92915050565b610b2281610a7a565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b6000819050919050565b6000610b68610b63610b5e84610a5a565b610b43565b610a5a565b9050919050565b6000610b7a82610b4d565b9050919050565b6000610b8c82610b6f565b9050919050565b610b9c81610b81565b82525050565b6000602082019050610bb76000830184610b93565b92915050565b610bc681610ae5565b8114610bd157600080fd5b50565b600081359050610be381610bbd565b92915050565b600060208284031215610bff57610bfe610a55565b5b6000610c0d84828501610bd4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7f82610ae5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb257610cb1610c45565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d07600083610cec565b9150610d1282610cf7565b600082019050919050565b6000610d2882610cfa565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d79600b83610d32565b9150610d8482610d43565b602082019050919050565b60006020820190508181036000830152610da881610d6c565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610de5601b83610d32565b9150610df082610daf565b602082019050919050565b60006020820190508181036000830152610e1481610dd8565b9050919050565b6000610e2682610ae5565b9150610e3183610ae5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e6657610e65610c45565b5b828201905092915050565b6000610e7c82610ae5565b9150610e8783610ae5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec057610ebf610c45565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0582610ae5565b9150610f1083610ae5565b925082610f2057610f1f610ecb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4a81610f2b565b8114610f5557600080fd5b50565b600081519050610f6781610f41565b92915050565b6000819050919050565b610f8081610f6d565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b600081519050610fb281610bbd565b92915050565b600080600080600060a08688031215610fd457610fd3610a55565b5b6000610fe288828901610f58565b9550506020610ff388828901610f8e565b945050604061100488828901610fa3565b935050606061101588828901610fa3565b925050608061102688828901610f58565b9150509295509295909350565b600061103e82610f6d565b915061104983610f6d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108857611087610c45565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110c5576110c4610c45565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110257611101610c45565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113f5761113e610c45565b5b82820290509291505056fea264697066735822122045a38cfe0c1959026c52f1e357ba04c1eac550175e4a4eca2654cdb0ee3dc40064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e8146100fc5780639e87a5cd14610127578063b60d428814610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd578063599b4619146100c75780636b69a592146100d1575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610ab8565b610199565b6040516100b49190610afe565b60405180910390f35b6100c56101e1565b005b6100cf610423565b005b3480156100dd57600080fd5b506100e66106ef565b6040516100f39190610afe565b60405180910390f35b34801561010857600080fd5b506101116106fc565b60405161011e9190610b28565b60405180910390f35b34801561013357600080fd5b5061013c610726565b6040516101499190610ba2565b60405180910390f35b61015a610750565b005b34801561016857600080fd5b50610183600480360381019061017e9190610be9565b61088a565b6040516101909190610b28565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610268576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103135760006001828154811061028e5761028d610c16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030b90610c74565b91505061026b565b50600067ffffffffffffffff81111561032f5761032e610cbd565b5b60405190808252806020026020018201604052801561035d5781602001602082028036833780820191505090505b50600190805190602001906103739291906109ae565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039a90610d1d565b60006040518083038185875af1925050503d80600081146103d7576040519150601f19603f3d011682016040523d82523d6000602084013e6103dc565b606091505b5050905080610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041790610d8f565b60405180910390fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561052e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104e4575b505050505090506000600190505b81518110156105bc57600082828151811061055a57610559610c16565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806105b490610c74565b91505061053c565b50600067ffffffffffffffff8111156105d8576105d7610cbd565b5b6040519080825280602002602001820160405280156106065781602001602082028036833780820191505090505b506001908051906020019061061c9291906109ae565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161066590610d1d565b60006040518083038185875af1925050503d80600081146106a2576040519150601f19603f3d011682016040523d82523d6000602084013e6106a7565b606091505b50509050806106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290610d8f565b60405180910390fd5b5050565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061078f600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d290919063ffffffff16565b10156107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610dfb565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461081e9190610e1b565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600182815481106108a05761089f610c16565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108de8361090e565b90506000670de0b6b3a764000085836108f79190610e71565b6109019190610efa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095757600080fd5b505afa15801561096b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098f9190610fb8565b5050509150506402540be400816109a69190611033565b915050919050565b828054828255906000526020600020908101928215610a27579160200282015b82811115610a265782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ce565b5b509050610a349190610a38565b5090565b5b80821115610a51576000816000905550600101610a39565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8582610a5a565b9050919050565b610a9581610a7a565b8114610aa057600080fd5b50565b600081359050610ab281610a8c565b92915050565b600060208284031215610ace57610acd610a55565b5b6000610adc84828501610aa3565b91505092915050565b6000819050919050565b610af881610ae5565b82525050565b6000602082019050610b136000830184610aef565b92915050565b610b2281610a7a565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b6000819050919050565b6000610b68610b63610b5e84610a5a565b610b43565b610a5a565b9050919050565b6000610b7a82610b4d565b9050919050565b6000610b8c82610b6f565b9050919050565b610b9c81610b81565b82525050565b6000602082019050610bb76000830184610b93565b92915050565b610bc681610ae5565b8114610bd157600080fd5b50565b600081359050610be381610bbd565b92915050565b600060208284031215610bff57610bfe610a55565b5b6000610c0d84828501610bd4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c7f82610ae5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cb257610cb1610c45565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d07600083610cec565b9150610d1282610cf7565b600082019050919050565b6000610d2882610cfa565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d79600b83610d32565b9150610d8482610d43565b602082019050919050565b60006020820190508181036000830152610da881610d6c565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610de5601b83610d32565b9150610df082610daf565b602082019050919050565b60006020820190508181036000830152610e1481610dd8565b9050919050565b6000610e2682610ae5565b9150610e3183610ae5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e6657610e65610c45565b5b828201905092915050565b6000610e7c82610ae5565b9150610e8783610ae5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec057610ebf610c45565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0582610ae5565b9150610f1083610ae5565b925082610f2057610f1f610ecb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4a81610f2b565b8114610f5557600080fd5b50565b600081519050610f6781610f41565b92915050565b6000819050919050565b610f8081610f6d565b8114610f8b57600080fd5b50565b600081519050610f9d81610f77565b92915050565b600081519050610fb281610bbd565b92915050565b600080600080600060a08688031215610fd457610fd3610a55565b5b6000610fe288828901610f58565b9550506020610ff388828901610f8e565b945050604061100488828901610fa3565b935050606061101588828901610fa3565b925050608061102688828901610f58565b9150509295509295909350565b600061103e82610f6d565b915061104983610f6d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108857611087610c45565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110c5576110c4610c45565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110257611101610c45565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561113f5761113e610c45565b5b82820290509291505056fea264697066735822122045a38cfe0c1959026c52f1e357ba04c1eac550175e4a4eca2654cdb0ee3dc40064736f6c63430008080033",
  "devdoc": {
    "author": "Zeeshan Saleem",
    "details": "this implement price feed is a library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crow funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "this contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}